{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","todos","setTodos","useEffect","callApi","then","data","a","fetch","response","json","body","status","Error","message","className","map","todo","title","Date","creationTime","toLocaleDateString","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAiCeA,MA9Bf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WACRC,IAAUC,MAAK,SAAAC,GACbJ,EAASI,QAEV,IAEH,IAAMF,EAAO,uCAAG,8BAAAG,EAAA,sEACSC,MAAM,cADf,cACRC,EADQ,gBAEKA,EAASC,OAFd,UAERC,EAFQ,OAGU,MAApBF,EAASG,OAHC,sBAGqBC,MAAMF,EAAKG,SAHhC,gCAIPH,GAJO,2CAAH,qDAOb,OACE,mCACE,oBAAII,UAAU,UAAd,SACGd,GAASA,EAAMe,KAAI,SAACC,GAAD,OAAW,qBAAkBF,UAAU,SAA5B,UAC7B,oBAAIA,UAAU,QAAd,SAAuBE,EAAKC,QAC5B,iCACE,8BAAM,IAAIC,KAAKF,EAAKG,cAAcC,2BAHEJ,EAAKK,YCVtCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.67a1d11f.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [todos, setTodos] = useState('')\n\n  useEffect(() => {\n    callApi().then(data => {\n      setTodos(data);\n    });\n  }, [])\n\n  const callApi = async () => {\n    const response = await fetch('/api/todos');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n  };\n\n  return (\n    <>\n      <ul className='tickets'>\n        {todos && todos.map((todo) => (<li key={todo.id} className='ticket'>\n          <h5 className='title'>{todo.title}</h5>\n          <footer>\n            <div>{new Date(todo.creationTime).toLocaleDateString()}</div>\n          </footer>\n        </li>))}\n      </ul>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}